// Code generated by MockGen. DO NOT EDIT.
// Source: ./report/report.go

// Package mock_report is a generated GoMock package.
package mock_report

import (
	gomock "github.com/golang/mock/gomock"
	report "github.com/na-ga/gke-node-optimizer/report"
	reflect "reflect"
)

// MockReporter is a mock of Reporter interface
type MockReporter struct {
	ctrl     *gomock.Controller
	recorder *MockReporterMockRecorder
}

// MockReporterMockRecorder is the mock recorder for MockReporter
type MockReporterMockRecorder struct {
	mock *MockReporter
}

// NewMockReporter creates a new mock instance
func NewMockReporter(ctrl *gomock.Controller) *MockReporter {
	mock := &MockReporter{ctrl: ctrl}
	mock.recorder = &MockReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockReporter) EXPECT() *MockReporterMockRecorder {
	return m.recorder
}

// Report mocks base method
func (m *MockReporter) Report(result *report.Result) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Report", result)
	ret0, _ := ret[0].(error)
	return ret0
}

// Report indicates an expected call of Report
func (mr *MockReporterMockRecorder) Report(result interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Report", reflect.TypeOf((*MockReporter)(nil).Report), result)
}
